caption: The Flow
created: 20140902121237075
modified: 20140930203902152
title: ThirdFlow/The Flow
type: text/vnd.tiddlywiki

So how does working with the <<tf>> look like?


<<imagethumb "ThirdFlow Architecture Development Phase.jpg" "150%">>
''While developing and maintaining your customization plugin'' you normally directly work //inside// your browser on a development ~TiddlyWiki. The focus of the <<tf>> is to avoid having to use external editors but instead to rely mostly on ~TiddlyWiki's built-in capabilitites and its instaneous reaction to changes. WYSIWJC: what you see is what just crashed...

In the background, your development ~TiddlyWiki running in your browser also automatically gets synced with your //structured// source code tree residing on your local disk. The <<tf>> plugin helps here by storing your tiddlers not simply flat in a single folder, but instead automatically uses a hierarchical folder structure based on titles. You can also develop offline first and only later import your changes back into a synced ~TiddlyWiki instance. You decide on your process.

Please note that this ~TiddlyWiki is an example of this process: it is used both for development and maintenance of the <<tf>> plugin as well as its own documentation, illustration and release.

''Source code management'' is done as usual using your favorite source code management tool, such as [[git|http://en.wikipedia.org/wiki/Git_%28software%29]] and others. As the <<tf>> plugin structures your tiddler source files you get a well-organized repository structure at no price.

<<imagethumb "ThirdFlow Architecture Release Phase.jpg" "190%">>
''For packaging your plugin'' you finally simply run a shell script which packs the plugin tiddler and saves it to disk. Additionally, a demonstration ~TiddlyWiki is also created that guides your future plugin users through the process of deploying your new plugin.

Please note that this ~TiddlyWiki is an actual example of this process.

Of course, this plugin has been developed using its own development flow. Eat your own dogfood. This one tastes delicious... However, one size never fits all, so the <<tf>> won't suit many plugin development projects. But for customization plugins it should be quite useful.

And now for something completely different: //no//, it's not pronounced "Third Flaw". It may be rather along the lines of //Fyrd// Flow though...