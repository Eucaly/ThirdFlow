created: 20140925184608907
modified: 20141023100926683
tags: Terminology
title: Plugin
type: text/vnd.tiddlywiki

! Abstract

A ''plugin'' in ~TiddlyWiki 5 is a bundle of tiddlers packaged together as a //single// tiddler. Plugins are used to distribute optional customizations components for ~TiddlyWikis.

! Plugin Types

Plugins have a `plugin-type` field that currently can take on these values:

@@.wide
* `plugin` (which is the default) indicates a //plain// (or general, ordinary, ...) plugin. This is a plugin that isn't further specialized in its purpose.

* `theme` identifies plugins that provide themes and that are understood by ~TiddlyWiki's theming mechanism.

* `language` identifies language plugins.

* `import` is used by the core during import.
@@

! Plugin Priority

Plugins optionally can have a `plugin-priority` field. This field controls the order in which plugins get unpacked. The lower its plugin priority is, the earlier this plugin gets unpacked.

In consequence, when multiple plugins contain the same [[shadow tiddler|Shadow Tiddler]], then the plugin with the highest plugin-priority wins. For plugins with the same plugin-priority, the plugin with the alphabetically latest title wins. That's zzWins, so to say...

For instance, the TiddlyWiki 5 Core has `plugin-priority: 0`.

! Meta

Plugin tiddlers ''must'' be [[ordinary tiddlers|Ordinary Tiddler]]. They cannot be [[shadow tiddlers|Shadow Tiddler]] themselves. Thus, you can't pack plugins into plugins. But you can pack plugins into libraries, but that's another story.

!Technical

From the technical perspective, a plugin is a single tiddler with [[JSON]] content. This JSON content in turn represents the individual tiddlers that are packaged into the plugin.

During the boot process of a ~TiddlyWiki 5 or later when importing a plugin into a ~TiddlyWiki 5 plugins automatically get unpacked. That means that the tiddlers packed into a plugin are unpacked into individual ''shadow tiddlers''.

[[Shadow tiddlers|Shadow Tiddler]] cannot be changed, but they can be overwritten simply by creating a new tiddler with the same title. Unfortunately, there isn't yet an offical term for such a tiddler that overwrites a shadow tiddler. In this documentation I'll use the term [[foreground tiddler|Foreground Tiddler]] instead when refering to a tiddler (in the foreground) for which a shadow tiddler exists.

!Packaging

Basically, there are two ways to package plugins:

@@.wide
# inside the web browser from the JavaScript console. I won't further detail this process as I consider the //Third Flow// process to be much easier in comparism.

# from the command line running a ~TiddlyWiki 5 instance under the control of Node.js and using the [[--packplugin|packplugin Command]] command that comes with the //Third Flow// plugin. Typically, you will call this command during the release phase from your ~TiddlyWiki [[release edition]].
@@

!See Also

* [[Plugin Information]]
* [[Foreground Tiddler]]
* [[Shadow Tiddler]]
* [[Ordinary Tiddler]]
* [[packplugin Command]]